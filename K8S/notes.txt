apiVersion: apps/v1
kind: Deployment
metadata:
  name: platforms-depl
spec:
  replicas: 1
  selector:   # selects the template we are createing
    matchLabels:
      app: platformservice
  template: # define what we are deploying
    metadata:
      labels:
        app: platformservice
    spec:
      containers:
        - name: platformservice
          image: sardox/platformservice:latest    ## the actual docker image to deploy


Deploy the file with:
kubectl apply -f .\platforms-depl.yaml
Check deployment:
kubectl get deployments
kubectl get pods
## find the service and their associated IP addresses, i.e. the NodePort is likely the one to use to communicate with applications outside K8S
kubectl get services
kubectl delete deployment platform-depl
## for a refresh 
kubectl rollout restart deployment platforms-depl

#Getting nginx gateway (https://kubernetes.github.io/ingress-nginx/deploy/)
kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.1.0/deploy/static/provider/cloud/deploy.yaml

kubectl get namespace
kubectl get pods --namespace=ingress-nginx

#To see Persistent Volume Claims (local disk storage) [create using a deploy yaml]
kubectl get pvc

## create a secret
kubectl create secret generic mssql --from-literal=SA_PASSWORD="<password>"

## delete a pod
kubectl delete deployment [--all] <deply name>
kubectl delete pod [--all] <pod name>

## delte pvc (make sure it's not being used)
kubectl delete pvc [--all] <pvc name>
