apiVersion: apps/v1
kind: Deployment
metadata:
  name: mssql-depl    ## kubectl get deployments name
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mssql
  template:
    metadata:
      labels:
        app: mssql
    spec:
      containers:   ## create 1 container
        - name: mssql
          image: mcr.microsoft.com/mssql/server:2019-latest
          ports:
            - containerPort: 1433
          env:
          - name: MSSQL_PID
            value: "Express"    ## use the free version
          - name: ACCEPT_EULA
            value: "Y"
          - name: SA_PASSWORD
            valueFrom:
              secretKeyRef:   ## get the mssql from the secret setup at the command line kubectl
                name: mssql
                key: SA_PASSWORD
          volumeMounts:   ## the mssql image above is Linux based so it needs a Linux path
          - mountPath: /var/opt/mssql/data
            name: mssqldb
      volumes:
      - name: mssqldb
        persistentVolumeClaim:
          claimName: mssql-claim    ## use the pvc shown in the 'kubectl get pvc'
---
apiVersion: v1
kind: Service
metadata:
  name: mssql-clusterip-srv
spec:
  type: ClusterIP
  selector:
    app: mssql    ## from line 13 above
  ports:
  - name: mssql
    protocol: TCP
    port: 1433
    targetPort: 1433
---
apiVersion: v1
kind: Service
metadata:
  name: mssql-loadbalancer
spec:
  type: LoadBalancer      ## this is used to access mssql from the host
  selector:
    app: mssql
  ports:
  - protocol: TCP
    port: 1433
    targetPort: 1433